package org.opennms.netmgt.correlation.ncs.external;

import function org.opennms.core.utils.InetAddressUtils.addr;
import function org.opennms.core.utils.InetAddressUtils.str;

import java.util.Date;
import java.net.InetAddress;
import java.util.List;
import java.util.ArrayList;
import java.util.HashSet;


import org.opennms.netmgt.correlation.drools.DroolsCorrelationEngine;
import org.opennms.netmgt.correlation.ncs.*;
import org.opennms.netmgt.model.ncs.*;
import org.opennms.netmgt.xml.event.Event;
import org.opennms.netmgt.xml.event.Parm;
import org.opennms.netmgt.xml.event.Parms;
import org.opennms.netmgt.xml.event.Value;
import org.opennms.netmgt.model.events.EventBuilder;
import org.opennms.netmgt.EventConstants;
import org.opennms.netmgt.capsd.EventUtils;
import org.drools.spi.KnowledgeHelper;

global org.opennms.netmgt.correlation.drools.DroolsCorrelationEngine engine;
global org.opennms.netmgt.correlation.ncs.NCSCorrelationService correlationService;


rule "load dependencies"
	salience 10000
	when
		Impacted( $c : target )
	then
		Component c = $c;
		List<NCSComponent> list = correlationService.findComponentsThatDependOn( c.getId() );
		for ( NCSComponent ncsParent : list ) {
			Component parent = new Component( ncsParent );
			if ( parent.getDependenciesRequired() != NCSComponent.DependencyRequirements.ANY ) {
				println( "Parent component '" + parent.getName() + "' depends on " + c.getName() );
				insert( new DependsOn( parent, c ) );
			}
			else {
				List<NCSComponent> ncsChildren = correlationService.findSubComponents( parent.getId() );
				List<Component> children = new ArrayList<Component>( ncsChildren.size() );
				for ( NCSComponent ncsChild : ncsChildren ) {
					Component child = new Component( ncsChild );
					children.add( child );
				}
				insert( new DependsOnAny( parent, children ) );
				println( "Inserted DependsOnAny for " + parent );			
			}
			
		}
end


function void println(Object msg)
{
	System.err.println(new Date() + " : " + msg);
}


function void sendImpactedComponentEvent( DroolsCorrelationEngine engine, Component c, Event e )
{
	EventBuilder bldr = new EventBuilder( "uei.opennms.org/internal/ncs/componentImpacted", "Component Correlator" );
	bldr.addParam("componentType", c.getType() );
	bldr.addParam("componentName", c.getName() );
	bldr.addParam("componentForeignSource", c.getForeignSource() );
	bldr.addParam("componentForeignId", c.getForeignId() );
	bldr.addParam("cause", e.getDbid() );
	engine.sendEvent(bldr.getEvent());
}


function void sendResolvedComponentEvent( DroolsCorrelationEngine engine, Component c, Event e)
{
	EventBuilder bldr = new EventBuilder( "uei.opennms.org/internal/ncs/componentResolved", "Component Correlator" );
	bldr.addParam("componentType", c.getType() );
	bldr.addParam("componentName", c.getName() );
	bldr.addParam("componentForeignSource", c.getForeignSource() );
	bldr.addParam("componentForeignId", c.getForeignId() );
	bldr.addParam("cause", e.getDbid() );
	engine.sendEvent(bldr.getEvent());
}



